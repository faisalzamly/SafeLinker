"""
ุจูุช SafeLinker ููุญุต ุงูุฑูุงุจุท ุนุจุฑ VirusTotal
------------------------------------------
ูุฐุง ุงูุจูุช ูููู ุจุงูููุงู ุงูุชุงููุฉ:
1. ุงุณุชูุจุงู ุฃู ุฑุงุจุท ูู ุงููุณุชุฎุฏู.
2. ุฅุฑุณุงู ุงูุฑุงุจุท ุฅูู ูุงุฌูุฉ VirusTotal API ููุญุตู.
3. ุงูุงูุชุธุงุฑ ุญุชู ููุชูู ุงููุญุต ูุงุณุชุฑุฌุงุน ุงููุชูุฌุฉ.
4. ุญุณุงุจ ูุณุจุฉ ุงูุฃูุงู ูุงูุฎุทุฑ ูุนุฑุถ ุชูุฑูุฑ ูุงูู ูููุณุชุฎุฏู.
5. ุชุตููู ุงููุชูุฌุฉ (ุขููุ ูุดุจููุ ุฎุทุฑ) ุจุงุณุชุฎุฏุงู ุฃููุงู/ุฅูููุฌู.

ุงููุชุทูุจุงุช:
- pyTelegramBotAPI ููุชุนุงูู ูุน ุชูููุบุฑุงู.
- vt-py ููุชุนุงูู ูุน VirusTotal API.
- ููุชุงุญ API ูู VirusTotal (ูุฌุงูู ุจุนุฏ ุงูุชุณุฌูู).
- ุชููู ุจูุช ูู BotFather ูู ุชูููุบุฑุงู.
"""

import telebot
import asyncio
import vt

TOKEN = "8455216093:AAEwv31E-bpv995VnijQEn3mA0p4qyNCNTc"
VT_API_KEY = "2775f96a0b71e785e6fafaa2e64e481f2662580b66a23a14c99210420b77dd6b"
bot = telebot.TeleBot(TOKEN)

# ุฅูุดุงุก ูุงุฆู ุงูุจูุช
bot = telebot.TeleBot(TOKEN)


# ======= ุฏุงูุฉ ูุชุตููู ุงููุชูุฌุฉ =======
def classify_risk(safe, danger):
    """ุชุญุฏูุฏ ูุณุชูู ุงูุฎุทุฑ ุญุณุจ ุงููุณุจ"""
    if danger == 0:
        return "๐ข ุขูู ุชูุงูุงู"
    elif danger <= 10:
        return "๐ก ูุดุจูู ููููุงูุ ุชูุฎูู ุงูุญุฐุฑ"
    else:
        return "๐ด ุฎุทุฑ ุนุงูู! ุชุฌููุจ ุงูุฑุงุจุท"


# ======= ุฏุงูุฉ ูุญุต ุงูุฑุงุจุท ุนุจุฑ VirusTotal =======
async def scan_url(url):
    async with vt.Client(VT_API_KEY) as client:
        # ุฅุฑุณุงู ุงูุฑุงุจุท ูููุญุต
        analysis = await client.scan_url_async(url)

        # ุฅุนุงุฏุฉ ูุญุงููุฉ ุงูุญุตูู ุนูู ุงููุชูุฌุฉ ุญุชู ุชูุชูู
        for _ in range(10):  # 10 ูุญุงููุงุช = 50 ุซุงููุฉ ุชูุฑูุจุงู
            result = await client.get_object_async(f"/analyses/{analysis.id}")
            if result.status == "completed":
                stats = result.stats
                harmless = stats.get("harmless", 0)
                malicious = stats.get("malicious", 0)
                suspicious = stats.get("suspicious", 0)

                total = harmless + malicious + suspicious
                if total == 0:
                    total = 1  # ูุชุฌูุจ ุงููุณูุฉ ุนูู ุตูุฑ

                safe_percent = round((harmless / total) * 100, 2)
                danger_percent = round(((malicious + suspicious) / total) * 100, 2)

                report_link = f"https://www.virustotal.com/gui/url/{analysis.id}"
                return safe_percent, danger_percent, report_link

            # ูู ุงููุชูุฌุฉ ูู ุชูุชููุ ุงูุชุธุฑ 5 ุซูุงูู ูุฃุนุฏ ุงููุญุงููุฉ
            await asyncio.sleep(5)

        # ูู ูุง ุงูุชููุช ุงููุชูุฌุฉ
        return 0, 0, f"https://www.virustotal.com/gui/url/{analysis.id}"


# ======= ุฏุงูุฉ ุงูุชุนุงูู ูุน ุงูุฑุณุงุฆู =======
@bot.message_handler(func=lambda message: message.text and message.text.startswith("http"))
def handle_url(message):
    """ุชุณุชูุจู ุงูุฑุงุจุท ูู ุงููุณุชุฎุฏู ูุชูุญุตู"""
    url = message.text
    bot.send_message(message.chat.id, "๐ ุฌุงุฑู ูุญุต ุงูุฑุงุจุทุ ูุฑุฌู ุงูุงูุชุธุงุฑ...")

    # ุงุณุชุฎุฏุงู asyncio ูุชุดุบูู ุงููุญุต ุบูุฑ ุงููุชุฒุงูู
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    safe, danger, report = loop.run_until_complete(scan_url(url))

    # ุชุตููู ุงููุชูุฌุฉ
    status = classify_risk(safe, danger)

    # ุฅุฑุณุงู ุงููุชูุฌุฉ ูููุณุชุฎุฏู
    bot.send_message(
        message.chat.id,
        f"**ูุชูุฌุฉ ุงููุญุต:**\n"
        f"ูุณุจุฉ ุงูุฃูุงู: {safe}%\n"
        f"ูุณุจุฉ ุงูุฎุทุฑ: {danger}%\n"
        f"{status}\n\n"
        f"[ุนุฑุถ ุงูุชูุฑูุฑ ุงููุงูู]({report})",
        parse_mode="Markdown"
    )


# ======= ุฑุณุงูุฉ ุชุฑุญูุจ ุนูุฏ /start =======
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        "๐ ุฃููุงู ุจู ูู ุจูุช **SafeLinker**!\n"
        "ุฃุฑุณู ุฃู ุฑุงุจุท (ูุจุฏุฃ ุจู http ุฃู https) ูุณุฃููู ุจูุญุตู ุนุจุฑ VirusTotal ูุฃุฎุจุฑู ุฅุฐุง ูุงู ุขูููุง ุฃู ูุดุจูููุง."
    )

from flask import Flask
import threading

app = Flask(__name__)

@app.route('/')
def home():
    return "SafeLinker Bot is running!"

def run_web():
    app.run(host='0.0.0.0', port=10000)

threading.Thread(target=run_web).start()
# ======= ุชุดุบูู ุงูุจูุช =======
bot.polling(none_stop=True)